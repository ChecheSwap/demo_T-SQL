IF OBJECT_ID('DBO.SP_ADDEMP') IS NOT NULL
	DROP PROCEDURE DBO.SP_ADDEMP;
GO
CREATE PROCEDURE DBO.SP_ADDEMP 
	@EID DECIMAL, @FNAME VARCHAR(50), @LNAME VARCHAR(50),
	 @EMAIL VARCHAR(50), @PNUMBER VARCHAR(50), @HDATE DATE, 
	 @JID VARCHAR(50), @SALARY DECIMAL, @COMMPCT DECIMAL, 
	 @MID DECIMAL, @DID DECIMAL

   AS  
	DECLARE @EM VARCHAR(500);
   BEGIN  
	 SET NOCOUNT ON;
     
	 BEGIN TRY

		INSERT INTO EMPLOYEES VALUES(@EID,@FNAME, @LNAME, @EMAIL, @PNUMBER, @HDATE, @JID, @SALARY, @COMMPCT, @MID, @DID);

	 END TRY
	 BEGIN CATCH

	 SET @EM = ERROR_MESSAGE();

		IF @EM LIKE '%PRIMARY KEY%'  AND  @EM LIKE '%EMP_EMP_ID_PK%'
			PRINT '@EMPLEADO EXISTENTE, IMPOSIBLE DUPLICAR CLAVE DE EMPLEADO....';

		ELSE IF @EM LIKE '%FOREIGN KEY%'  AND  @EM LIKE '%DEPARTMENT_ID%'
			PRINT '@DEPARTAMENTO INEXISTENTE, INGRESE DEPARTAMENTO VALIDO....';

		ELSE IF @EM LIKE '%FOREIGN KEY%'  AND  @EM LIKE '%JOB_ID%'
			PRINT '@PUESTO INEXISTENTE, INGRESE PUESTO VALIDO....';

		ELSE IF @EM LIKE '%FOREIGN KEY%'  AND  @EM LIKE '%MANAGER%'
			PRINT '@MANAGER INEXISTENTE, INGRESE MANAGER VALIDO....';

		ELSE
			PRINT '@EXCEPCION NO CONTROLADA ....' + @EM;
	 END CATCH;
   END  
GO  

EXECUTE SP_ADDEMP 100, 'JESUS', 'NAVARRETE', 'A301429@UACH.MX', '6271137795', '2018-10-15', 'AD_ASST', 19000, NULL, NULL, NULL;
EXECUTE SP_ADDEMP 900, 'JESUS', 'NAVARRETE', 'A301429@UACH.MX', '6271137795', '2018-10-15', 'AD_ASST', 19000, NULL, NULL,1000;
EXECUTE SP_ADDEMP 900, 'JESUS', 'NAVARRETE', 'A301429@UACH.MX', '6271137795', '2018-10-15', 'ERROR', 19000, NULL, NULL, 10;
EXECUTE SP_ADDEMP 900, 'JESUS', 'NAVARRETE', 'A301429@UACH.MX', '6271137795', '2018-10-15', 'AD_ASST', 19000, NULL, 901, 10;



------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

IF OBJECT_ID('DBO.SP_JHMOV') IS NOT NULL
	DROP PROCEDURE DBO.SP_JHMOV;

GO
CREATE PROCEDURE SP_JHMOV 
	@EID DECIMAL, @EDATE DATE, @JID VARCHAR(10), @DID DECIMAL
	AS
		DECLARE @SDATE DATE;
		DECLARE @EM VARCHAR(500);
		BEGIN
		SET NOCOUNT ON;
		BEGIN TRY
			SELECT @SDATE = DATEADD(DAY, 1, MAX(END_DATE)) FROM JOB_HISTORY WHERE EMPLOYEE_ID = @EID;
			IF (@SDATE IS NULL) 				
				SELECT @SDATE = HIRE_DATE FROM EMPLOYEES WHERE EMPLOYEE_ID = @EID;
			IF @SDATE IS NULL
				SET @SDATE = '1950-01-01';
			INSERT INTO JOB_HISTORY VALUES(@EID, @SDATE, @EDATE, @JID, @DID);
			PRINT '>>MOVIMIENTO REGISTRADO SATISFACTORIAMENTE!'			
		END TRY
		BEGIN CATCH		
			SET @EM = ERROR_MESSAGE();
			IF (@EM LIKE '%PRIMARY_KEY%' AND @EM LIKE '%JHIST_EMP_ID_ST_DATE_PK%')
				PRINT '@CLAVE PRIMARIA EXISTENTE, VERIFIQUE REGISTRO IDEMPLEADO + FECHA INICIO PUESTO';
			ELSE IF (@EM LIKE '%FOREIGN_KEY%' AND @EM LIKE '%EMPLOYEE_ID%')
				PRINT '@EMPLEADO NO VALIDO, VERIFIQUE ID EMPLEADO';
			ELSE IF (@EM LIKE '%FOREIGN_KEY%' AND @EM LIKE '%JOB_ID%')
				PRINT '@PUESTO NO VALIDO, VERIFIQUE ID PUESTO';
			ELSE IF (@EM LIKE '%FOREIGN_KEY%' AND @EM LIKE '%DEPARTMENT_ID%')
				PRINT '@DEPARTAMENTO NO VALIDO, VERIFIQUE ID DEPARTAMENTO';
			ELSE 
				PRINT '@EXCEPCION NO CONTROLADA ' + @EM;			
		END CATCH;
	END;
GO


EXECUTE SP_JHMOV 900, '1990-01-01', 'AD_PRES' , 90;
EXECUTE SP_JHMOV 100, '2008-01-01', 'AD_PRES' , 900;
EXECUTE SP_JHMOV 100, '2009-01-01', 'AD_PRES_ERR' , 90;




	

	





